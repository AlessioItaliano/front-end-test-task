{"version":3,"file":"static/js/383.7a4ecf49.chunk.js","mappings":"4KAIO,MAAMA,EAAUC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAKxBC,EAAYJ,EAAAA,GAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oQAODI,EAAAA,EAAUC,YAAYC,OAGtBF,EAAAA,EAAUC,YAAYE,S,aCjBxD,MAMA,EANgBC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC3BE,EAAAA,EAAAA,KAACC,EAAS,CAAAF,UACRC,EAAAA,EAAAA,KAACC,EAAW,CAAAF,SAAEA,KACJ,C,kECHP,IAkBIG,EAAS,WAAe,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBG,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWR,IAClD,KAAOA,KACLI,GCvBF,mEDuBkC,GAAdC,EAAML,IAE1B,OAAOI,CACT,E,0EEvBO,MAAMK,EAAOzB,EAAAA,GAAO0B,KAAIxB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qFAOlBwB,EAAQ3B,EAAAA,GAAO4B,MAAKtB,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8GAQpB0B,EAAa7B,EAAAA,GAAO8B,MAAKC,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,mJAI3BI,EAAAA,EAAUyB,OAAOC,QACZ1B,EAAAA,EAAUyB,OAAOE,SAKpBC,EAAmBnC,EAAAA,GAAOoC,SAAQC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,wLAOpCI,EAAAA,EAAUyB,OAAOC,QACZ1B,EAAAA,EAAUyB,OAAOE,S,aC1BjC,MAoCA,EApCoBI,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAC3BC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IAEzBC,QAAQC,IAAIN,GAgBZ,OACEO,EAAAA,EAAAA,MAAClC,EAAM,CAACmC,SAfWC,IACnBA,EAAEC,iBACF,MAAMzB,EAAOwB,EAAEE,cACTC,EAAU,CACdjC,GAAIL,IACJuC,OAAQV,EAAKW,KACbC,MAAO9B,EAAK+B,SAASD,MAAME,MAC3BC,YAAajC,EAAK+B,SAASE,YAAYD,OAEzCnB,GAASqB,EAAAA,EAAAA,IAAeP,IAExB3B,EAAKmC,OAAO,EAIoBC,aAAa,MAAKlD,SAAA,EAChDoC,EAAAA,EAAAA,MAAClC,EAAO,CAAAF,SAAA,CAAC,SAEPC,EAAAA,EAAAA,KAACC,EAAY,CAACiD,KAAK,OAAOR,KAAK,QAAQS,UAAQ,QAEjDhB,EAAAA,EAAAA,MAAClC,EAAO,CAAAF,SAAA,CAAC,eAEPC,EAAAA,EAAAA,KAACC,EAAkB,CAACiD,KAAK,OAAOR,KAAK,cAAcS,UAAQ,QAE7DnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CAACF,KAAM,SAAUR,KAAM,aACvB,E,QCvCN,MAAMnD,EAAYJ,EAAAA,GAAOK,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8RAcTI,EAAAA,EAAUyB,OAAOkC,UAG3B3D,EAAAA,EAAUyB,OAAOmC,WAGpBC,EAAQpE,EAAAA,GAAOqE,EAAC/D,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sFAMlBI,EAAAA,EAAUyB,OAAOC,S,gCCxBrB,MAAM7B,EAAYJ,EAAAA,GAAOK,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0LAWbI,EAAAA,EAAUyB,OAAOmC,WAG1BG,EAAOtE,EAAAA,GAAOuE,GAAEjE,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4QAQKI,EAAAA,EAAUC,YAAYC,OAGtBF,EAAAA,EAAUC,YAAYE,SAK3C8D,EAAOxE,EAAAA,GAAOyE,GAAE1C,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,yTAUPI,EAAAA,EAAUyB,OAAOmC,UAEL5D,EAAAA,EAAUC,YAAYC,OAGtBF,EAAAA,EAAUC,YAAYE,SAK3CgE,EAAS1E,EAAAA,GAAOK,IAAGgC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,+OAONwE,GAMbC,EAAQ5E,EAAAA,GAAO6E,IAAGC,IAAAA,GAAA3E,EAAAA,EAAAA,GAAA,uIAUlB4E,EAAS/E,EAAAA,GAAOqE,EAACW,IAAAA,GAAA7E,EAAAA,EAAAA,GAAA,kFAInBI,EAAAA,EAAUyB,OAAOC,SAGfgD,EAAcjF,EAAAA,GAAOqE,EAACa,IAAAA,GAAA/E,EAAAA,EAAAA,GAAA,kFAIxBI,EAAAA,EAAUyB,OAAOC,SAGfmC,EAAQpE,EAAAA,GAAOqE,EAACc,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,kFAIlBI,EAAAA,EAAUyB,OAAOC,SAGfmD,EAAiBpF,EAAAA,GAAOK,IAAGgF,IAAAA,GAAAlF,EAAAA,EAAAA,GAAA,sGAQ3BmF,EAAatF,EAAAA,GAAOqE,EAACkB,IAAAA,GAAApF,EAAAA,EAAAA,GAAA,kFAIvBI,EAAAA,EAAUyB,OAAOC,SC9D5B,EA1CoBuD,KAClB,MAAMjD,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAE3B8C,EAAevC,IACnBA,EAAEwC,kBACFnD,GAASoD,EAAAA,EAAAA,IAAkBzC,EAAEE,cAAchC,IAAI,EAGjD,OACEP,EAAAA,EAAAA,KAAA+E,EAAAA,SAAA,CAAAhF,SACI6B,EAAavB,QAKbL,EAAAA,EAAAA,KAACC,EAAW,CAAAF,UACVC,EAAAA,EAAAA,KAACC,EAAM,CAAAF,SACJ6B,EAAaoD,KAAIxC,IAChBL,EAAAA,EAAAA,MAAClC,EAAM,CAAAF,SAAA,EACLC,EAAAA,EAAAA,KAACC,EAAQ,CAAAF,UACPC,EAAAA,EAAAA,KAACC,EAAO,CAACgF,IAAKzC,EAAQ0C,WAAYC,IAAI,mBAExCnF,EAAAA,EAAAA,KAACC,EAAQ,CAAAF,SAAEyC,EAAQC,UACnBzC,EAAAA,EAAAA,KAACC,EAAa,CAAAF,SAAEyC,EAAQM,eACxB9C,EAAAA,EAAAA,KAACC,EAAO,CAAAF,SAAEyC,EAAQG,SAClB3C,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACL7C,GAAIiC,EAAQjC,GACZ6E,KAAMR,EACNlC,KAAM,SACNQ,KAAM,aAXGV,EAAQjC,WAP3BP,EAAAA,EAAAA,KAACC,EAAgB,CAAAF,UACfC,EAAAA,EAAAA,KAACC,EAAY,CAAAF,SAAC,+CAwBjB,EChCP,EAVoBsF,KAEhBlD,EAAAA,EAAAA,MAAClC,EAAW,CAAAF,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAO,CAAAF,SAAC,iBACTC,EAAAA,EAAAA,KAACyB,EAAW,KACZzB,EAAAA,EAAAA,KAAC2E,EAAW,OCElB,EARgBW,KAEZtF,EAAAA,EAAAA,KAACd,EAAAA,EAAO,CAAAa,UACNC,EAAAA,EAAAA,KAACqF,EAAW,K,iCCNX,MAAMvD,EAAqByD,GAASA,EAAM3D,aAAaA,Y","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js","components/ArticleForm/ArticleForm.styled.js","components/ArticleForm/ArticleForm.jsx","components/UserAccount/UserAccount.styled.js","components/UserArticle/UserArticle.styled.js","components/UserArticle/UserArticle.jsx","components/UserAccount/UserAccount.jsx","pages/Account.jsx","redux/userArticles/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { variables } from '../../stylesheet/variables';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 576px;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    min-width: 576px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    max-width: 992px;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => (\n  <s.Section>\n    <s.Container>{children}</s.Container>\n  </s.Section>\n);\n\nexport default Section;\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import styled from 'styled-components';\n\nimport { variables } from 'stylesheet/variables';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const InputTitle = styled.input`\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n  background: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n`;\n\nexport const InputDescription = styled.textarea`\n  padding: 18px 20px;\n  font-size: 18px;\n  height: 180px;\n\n  resize: none;\n\n  color: ${variables.colors.primary};\n  background: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { addUserArticle } from '../../redux/userArticles/slice';\nimport { selectUserArticles } from '../../redux/userArticles/selectors';\nimport { selectUser } from '../../redux/auth/selectors';\n\nimport Button from 'components/Button';\n\nimport * as s from './ArticleForm.styled';\n\nconst ArticleForm = () => {\n  const dispatch = useDispatch();\n  const userArticles = useSelector(selectUserArticles);\n  const user = useSelector(selectUser);\n  \n  console.log(userArticles);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const article = {\n      id: nanoid(),\n      author: user.name,\n      title: form.elements.title.value,\n      description: form.elements.description.value,\n    };\n    dispatch(addUserArticle(article));\n\n    form.reset();\n  };\n\n  return (\n    <s.Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <s.Label>\n        Title\n        <s.InputTitle type=\"text\" name=\"title\" required />\n      </s.Label>\n      <s.Label>\n        Description\n        <s.InputDescription type=\"text\" name=\"description\" required />\n      </s.Label>\n      <Button type={'submit'} name={'Create'} />\n    </s.Form>\n  );\n};\n\nexport default ArticleForm;\n","import styled from 'styled-components';\n\nimport { variables } from '../../stylesheet/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  height: auto;\n  width: 100%;\n\n  padding: 20px;\n\n  margin-right: auto;\n  margin-left: auto;\n\n  box-shadow: 0 4px 4px ${variables.colors.boxShadow};\n  border-radius: 10px;\n\n  background: ${variables.colors.secondary};\n`;\n\nexport const Title = styled.p`\n  flex-grow: 1;\n\n  font-size: 22px;\n  font-weight: 700;\n\n  color: ${variables.colors.primary};\n`;\n","import styled from 'styled-components';\n\nimport noAvaibleImg from '../../images/NoPhotoAvailable.png';\n\nimport { variables } from 'stylesheet/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  padding: 20px 0;\n\n  width: 100%;\n  height: 100%;\n  border-radius: 12px;\n\n  background-color: ${variables.colors.secondary};\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-wrap: wrap;\n  column-count: 1;\n  gap: 10px;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    column-count: 2;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    column-count: 3;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  padding: 10px;\n  width: 100%;\n  height: 426px;\n  border-radius: 12px;\n\n  background-color: ${variables.colors.secondary};\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    width: 243px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    width: 297px;\n  }\n`;\n\nexport const ImgBox = styled.div`\n  width: 100%;\n  padding-top: 60%;\n  position: relative;\n  border-radius: 12px;\n  overflow: hidden;\n\n  background-image: url(${noAvaibleImg});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const Author = styled.p`\n  flex-grow: 1;\n  font-size: 10px;\n  font-weight: 500;\n  color: ${variables.colors.primary};\n`;\n\nexport const Description = styled.p`\n  flex-grow: 1;\n  font-size: 12px;\n  font-weight: 500;\n  color: ${variables.colors.primary};\n`;\n\nexport const Title = styled.p`\n  flex-grow: 1;\n  font-size: 16px;\n  font-weight: 700;\n  color: ${variables.colors.primary};\n`;\n\nexport const EmptyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 20px 0;\n`;\n\nexport const EmptyTitle = styled.p`\n  flex-grow: 1;\n  font-size: 22px;\n  font-weight: 700;\n  color: ${variables.colors.primary};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { removeUserArticle } from '../../redux/userArticles/slice';\nimport { selectUserArticles } from '../../redux/userArticles/selectors';\n\nimport * as s from './UserArticle.styled';\nimport Button from 'components/Button';\n\nconst UserArticle = () => {\n  const dispatch = useDispatch();\n\n  const userArticles = useSelector(selectUserArticles);\n\n  const handleRemove = e => {\n    e.stopPropagation();\n    dispatch(removeUserArticle(e.currentTarget.id));\n  };\n\n  return (\n    <>\n      {!userArticles.length ? (\n        <s.EmptyContainer>\n          <s.EmptyTitle> Oops, you don't have any articles yet!</s.EmptyTitle>\n        </s.EmptyContainer>\n      ) : (\n        <s.Container>\n          <s.List>\n            {userArticles.map(article => (\n              <s.Item key={article.id}>\n                <s.ImgBox>\n                  <s.Image src={article.urlToImage} alt=\"Article_img\" />\n                </s.ImgBox>\n                <s.Author>{article.author}</s.Author>\n                <s.Description>{article.description}</s.Description>\n                <s.Title>{article.title}</s.Title>\n                <Button\n                  id={article.id}\n                  func={handleRemove}\n                  name={'Remove'}\n                  type={'submit'}\n                />\n              </s.Item>\n            ))}\n          </s.List>\n        </s.Container>\n      )}\n    </>\n  );\n};\n\nexport default UserArticle;\n","import ArticleForm from 'components/ArticleForm';\nimport * as s from './UserAccount.styled';\nimport UserArticle from 'components/UserArticle';\n\nconst UserAccount = () => {\n  return (\n    <s.Container>\n      <s.Title>My articles</s.Title>\n      <ArticleForm />\n      <UserArticle />\n    </s.Container>\n  );\n};\n\nexport default UserAccount;\n","import Section from 'components/Section';\nimport UserAccount from 'components/UserAccount';\n\nconst Account = () => {\n  return (\n    <Section>\n      <UserAccount />\n    </Section>\n  );\n};\n\nexport default Account;\n","export const selectUserArticles = state => state.userArticles.userArticles;\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","variables","breakpoints","tablet","desktop","_ref","children","_jsx","s","nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","Form","form","Label","label","InputTitle","input","_templateObject3","colors","primary","quinary","InputDescription","textarea","_templateObject4","ArticleForm","dispatch","useDispatch","userArticles","useSelector","selectUserArticles","user","selectUser","console","log","_jsxs","onSubmit","e","preventDefault","currentTarget","article","author","name","title","elements","value","description","addUserArticle","reset","autoComplete","type","required","Button","boxShadow","secondary","Title","p","List","ul","Item","li","ImgBox","noAvaibleImg","Image","img","_templateObject5","Author","_templateObject6","Description","_templateObject7","_templateObject8","EmptyContainer","_templateObject9","EmptyTitle","_templateObject10","UserArticle","handleRemove","stopPropagation","removeUserArticle","_Fragment","map","src","urlToImage","alt","func","UserAccount","Account","state"],"sourceRoot":""}