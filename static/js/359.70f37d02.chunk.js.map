{"version":3,"file":"static/js/359.70f37d02.chunk.js","mappings":"4KAIO,MAAMA,EAAUC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAKxBC,EAAYJ,EAAAA,GAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oQAODI,EAAAA,EAAUC,YAAYC,OAGtBF,EAAAA,EAAUC,YAAYE,S,aCjBxD,MAMA,EANgBC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC3BE,EAAAA,EAAAA,KAACC,EAAS,CAAAF,UACRC,EAAAA,EAAAA,KAACC,EAAW,CAAAF,SAAEA,KACJ,C,uGCDP,MAAMG,EAAOf,EAAAA,GAAOgB,KAAId,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qFAOlBc,EAAQjB,EAAAA,GAAOkB,MAAKZ,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8GAQpBgB,EAAanB,EAAAA,GAAOoB,MAAKC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,mJAI3BI,EAAAA,EAAUe,OAAOC,QACZhB,EAAAA,EAAUe,OAAOE,SAKpBC,EAAmBzB,EAAAA,GAAO0B,SAAQC,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,0LAMpCI,EAAAA,EAAUe,OAAOC,QACZhB,EAAAA,EAAUe,OAAOE,S,aC7BjC,MAmCA,EAnCoBI,KAkBhBC,EAAAA,EAAAA,MAACf,EAAM,CAELgB,aAAa,MAAKlB,SAAA,EAElBiB,EAAAA,EAAAA,MAACf,EAAO,CAAAF,SAAA,CAAC,SAEPC,EAAAA,EAAAA,KAACC,EAAY,CAACiB,KAAK,OAAOC,KAAK,QAAQC,UAAQ,QAEjDJ,EAAAA,EAAAA,MAACf,EAAO,CAAAF,SAAA,CAAC,eAEPC,EAAAA,EAAAA,KAACC,EAAkB,CAACiB,KAAK,OAAOC,KAAK,cAAcC,UAAQ,QAE7DpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACH,KAAM,SAAUC,KAAM,c,QCjC7B,MAAM5B,EAAYJ,EAAAA,GAAOK,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8RAcTI,EAAAA,EAAUe,OAAOa,UAG3B5B,EAAAA,EAAUe,OAAOc,WAGpBC,EAAQrC,EAAAA,GAAOsC,EAAChC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sFAMlBI,EAAAA,EAAUe,OAAOC,SCd5B,EAbqBgB,KAIjBV,EAAAA,EAAAA,MAACf,EAAW,CAAAF,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAO,CAAAF,SAAC,iBACTC,EAAAA,EAAAA,KAACe,EAAW,OCIlB,EAVgBY,KAEZ3B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAA7B,UACEC,EAAAA,EAAAA,KAACd,EAAAA,EAAO,CAAAa,UACNC,EAAAA,EAAAA,KAAC0B,EAAY,O","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/ArticleForm/ArticleForm.styled.js","components/ArticleForm/ArticleForm.jsx","components/UserArticles/UserArticles.styled.js","components/UserArticles/UserArticles.jsx","pages/Account.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { variables } from '../../stylesheet/variables';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 576px;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    min-width: 576px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    max-width: 992px;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => (\n  <s.Section>\n    <s.Container>{children}</s.Container>\n  </s.Section>\n);\n\nexport default Section;\n","import styled from 'styled-components';\n\nimport { variables } from 'stylesheet/variables';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const InputTitle = styled.input`\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n  background: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n`;\n\nexport const InputDescription = styled.textarea`\n  padding: 18px 20px;\n  font-size: 18px;\n  height: 180px;\n  resize: vertical;\n\n  color: ${variables.colors.primary};\n  background: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n`;\n","// import { useDispatch } from 'react-redux';\n// import { register } from '../../redux/auth/operations';\n\nimport Button from 'components/Button';\n\nimport * as s from './ArticleForm.styled';\n\nconst ArticleForm = () => {\n  // const dispatch = useDispatch();\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n\n  //   dispatch(\n  //     register({\n  //       name: form.elements.name.value,\n  //       email: form.elements.email.value,\n  //       password: form.elements.password.value,\n  //     })\n  //   );\n  //   form.reset();\n  // };\n\n  return (\n    <s.Form\n      // onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <s.Label>\n        Title\n        <s.InputTitle type=\"text\" name=\"title\" required />\n      </s.Label>\n      <s.Label>\n        Description\n        <s.InputDescription type=\"text\" name=\"description\" required />\n      </s.Label>\n      <Button type={'submit'} name={'Create'} />\n    </s.Form>\n  );\n};\n\nexport default ArticleForm;\n","import styled from 'styled-components';\n\nimport { variables } from '../../stylesheet/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  height: auto;\n  width: 100%;\n\n  padding: 20px;\n\n  margin-right: auto;\n  margin-left: auto;\n\n  box-shadow: 0 4px 4px ${variables.colors.boxShadow};\n  border-radius: 10px;\n\n  background: ${variables.colors.secondary};\n`;\n\nexport const Title = styled.p`\n  flex-grow: 1;\n\n  font-size: 22px;\n  font-weight: 700;\n\n  color: ${variables.colors.primary};\n`;\n","import ArticleForm from 'components/ArticleForm';\nimport * as s from './UserArticles.styled';\n\nconst UserArticles = () => {\n  // const { urlToImage, author, description, title } = article;\n\n  return (\n    <s.Container>\n      <s.Title>My articles</s.Title>\n      <ArticleForm />\n\n      {/* <UserArticlesList /> */}\n    </s.Container>\n  );\n};\n\nexport default UserArticles;\n","import Section from 'components/Section';\nimport UserArticles from 'components/UserArticles';\n\nconst Account = () => {\n  return (\n    <>\n      <Section>\n        <UserArticles />\n      </Section>\n    </>\n  );\n};\n\nexport default Account;\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","variables","breakpoints","tablet","desktop","_ref","children","_jsx","s","Form","form","Label","label","InputTitle","input","_templateObject3","colors","primary","quinary","InputDescription","textarea","_templateObject4","ArticleForm","_jsxs","autoComplete","type","name","required","Button","boxShadow","secondary","Title","p","UserArticles","Account","_Fragment"],"sourceRoot":""}